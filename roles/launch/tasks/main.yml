---

- name: Create a security group
  local_action: 
    module: ec2_group
    name: "{{ security_group }}"
    description: Security Group for webserver Servers
    region: "{{ region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Launch the new EC2 Instance
  local_action: ec2 
                group={{ security_group }} 
                instance_type={{ instance_type}} 
                image={{ image }} 
                wait=true 
                region={{ region }} 
                keypair={{ keypair }}
                count={{ count }}
                ec2_access_key={{ ec2_access_key }}
                ec2_secret_key={{ ec2_secret_key }}
  register: ec2

- name: Wait for SSH to come up
  local_action: wait_for 
                host={{ item.public_ip }} 
                port=22 
                state=started
  with_items: ec2.instances

#- name: Add EC2 instance to the local host group
 # local_action: lineinfile 
  #              dest="hosts" 
   #             regexp={{ item.public_ip }} 
    #            insertafter=EOF 
     #           line={{ item.public_ip }}
 # with_items: ec2.instances

- name: Add server to temporary group
  add_host:
    hostname: "{{ item.private_ip }}"
    groupname: launched_server
  with_items: ec2.instances
  when: item.state != "terminated"

- name: accept new ssh fingerprints
  shell: ssh-keyscan -H {{ item.public_ip }} >> ~/.ssh/known_hosts
  with_items: ec2.instances


- name: Add tag to Instance
  local_action: ec2_tag resource={{ item.id }} 
                region={{ region }} 
                ec2_access_key={{ ec2_access_key }}
                ec2_secret_key={{ ec2_secret_key }}
                state=present
  with_items: ec2.instances
  args:
    tags:
      Name: ansible-webserver